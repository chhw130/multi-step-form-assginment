import Head from 'next/head';
import { Geist, Geist_Mono } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import { useMultiStep } from '@/hooks/useMultiStep';
import ReportBasicStep from '@/(domain)/book/report/components/steps/ReportBasicStep';
import { FormProvider, useForm } from 'react-hook-form';
import { ReadingStatus } from '@/(domain)/book/report/consts/consts';

const geistSans = Geist({
  variable: '--font-geist-sans',
  subsets: ['latin'],
});

const geistMono = Geist_Mono({
  variable: '--font-geist-mono',
  subsets: ['latin'],
});

export type BookReportForm = {
  readingStatus: ReadingStatus;
  startDate: string;
  endDate: string;
};

const BOOK_REPORT_STEP = ['독서 기본 정보', '독서 추천', '독후감', '인용구', '공개 여부'] as const;

export default function Home() {
  const { currentStep, navigateNextStep, navigatePrevStep, isFirstStep, isLastStep } =
    useMultiStep(BOOK_REPORT_STEP);

  const form = useForm<BookReportForm>({ defaultValues: {}, mode: 'onChange' });

  const onClickNextStep = async () => {
    const isValid = await form.trigger();
    if (!isValid) return;

    navigateNextStep();
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={`${styles.page} ${geistSans.variable} ${geistMono.variable}`}>
        <main className={styles.main}>
          <FormProvider {...form}>
            <section>
              {(() => {
                switch (currentStep) {
                  case '독서 기본 정보':
                    return <ReportBasicStep />;
                  case '독서 추천':
                    return <div>독서 추천</div>;
                  case '독후감':
                    return <div>독후감</div>;
                  case '인용구':
                    return <div>인용구</div>;
                  case '공개 여부':
                    return <div>공개 여부</div>;
                  default:
                    return null;
                }
              })()}
            </section>
            <section>
              <button disabled={isFirstStep} onClick={navigatePrevStep}>
                이전
              </button>
              <button disabled={isLastStep} onClick={onClickNextStep}>
                다음
              </button>
            </section>
          </FormProvider>
        </main>
      </div>
    </>
  );
}
